# Cutoff-Gray_URC-Bichat
# Determine an optimal cutpoint in presence of competing risks to categorize a continuous distribution.


# Packages
require("cmprsk")
require("survival")
require("Hmisc")


cutoff.Gray <- function(bdd,delai.event,event,continuous.var,code.competing,code.interest){
  
  # Data frame contenant les variables utilisees
  data <- bdd[,c(delai.event, event, continuous.var)]
  names(data) <- c("delai", "outcome", "quanti.var")
  data <- data[order(data$delai,decreasing=F), ]
  
  # Avertissement pour donnees manquantes
  if( nrow(na.omit(data)) < nrow(data) ) {
    
    return(print("Warning: Missing data in database."))
    
  } else {
      
      # Resultats avec Cox classique
      data$event.cox <- ifelse(data$outcome==code.competing,0,data$outcome)
    
      # Valeurs unique observees dans la distribution continue
      quanti.cut <- unique(sort(data$quanti.var))
      
      # Data-frame contenant les stat de de Gray standardisees pour chaque valeur unique
      res <- data.frame(quanti.val=quanti.cut,U=NA,Q=NA)
      
      # Calcul les stat de de Gray standardisees pour chaque valeur unique observee 
      for(l in 1:length(quanti.cut)){
        
        data$quanti.bin <- ifelse(data$quanti.var<quanti.cut[l],0,1)
       
        time <- (unique(data$delai[data$outcome==code.interest]))
        k <- length(time)
        D <- nrow(subset(data,outcome==code.interest))
        
        
        # Calcul de U
        
        Score <- data.frame(time)
        
        for (i in 1:k){
          Score$d.i1_plus[i] <- sum(data$event.cox[data$delai==time[i] & data$quanti.bin==1])
          Score$d.i1[i] <- sum(data$event.cox[data$delai==time[i]])
          Score$r.i1_plus[i] <- sum(data$delai>=time[i] & data$quanti.bin==1)+sum(data$delai<time[i] & data$quanti.bin==1 & data$outcome==2)
          Score$r.i12[i] <- sum(data$delai>=time[i])+sum(data$delai<time[i] & data$outcome==2)
        }
        
        Score$u <- Score$d.i1_plus-(Score$d.i1*(Score$r.i1_plus/Score$r.i12))
        
        U <- abs(sum(Score$u)) 
        
        
        # Calcul de la Variance (s**2)
        
        s<- sqrt( (1/(D - 1)) * sum(sapply(1:D,function(i) (1 - sum(sapply(1:i,function(j) 1/(D+1-j))))^2)) )
        
        
        #Stat de gray standardisÃ©e
        
        Q <- U/(s*sqrt(D-1))
        res[l,] <- c(lvwsi=quanti.cut[l],U,Q)
      }

      
      # Cutoff 
      print(res[res$Q==max(res$Q),])
  }
}

# For example
cutoff.Gray(cirrhose,"survie","outcomelt","lvwsi",2,1)
